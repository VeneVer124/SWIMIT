# OpenVPN – Minimalny Konfig CLI (Debian)

Szybka i **minimalna konfiguracja serwera i klienta OpenVPN** na systemie Debian/Linux – z użyciem `easy-rsa` i bez zbędnych dodatków. Całość do zrobienia w ok. **10–15 minut**.

## ✅ Założenia

- Serwer i klient to dwa różne systemy Debian/Ubuntu
- Użytkownik ma dostęp root (`sudo`)
- Adres IP serwera: `192.168.0.107` (przykład)

---

## 🖥️ 1. Instalacja pakietów (na serwerze)

```bash
sudo apt update
sudo apt install openvpn easy-rsa -y
```

---

## 🔐 2. Tworzenie CA i kluczy (serwer)

```bash
mkdir ~/openvpn-ca && cd ~/openvpn-ca
ln -s /usr/share/easy-rsa/* .
./easyrsa init-pki
./easyrsa build-ca
./easyrsa gen-req server nopass
./easyrsa sign-req server server
./easyrsa gen-dh
openvpn --genkey --secret ta.key
```

---

## 📁 3. Kopiowanie plików do /etc/openvpn

```bash
cp pki/ca.crt pki/private/server.key pki/issued/server.crt pki/dh.pem ta.key /etc/openvpn/
```

---

## ⚙️ 4. Tworzenie pliku konfiguracyjnego serwera

Zapisz jako `/etc/openvpn/server.conf`:

```ini
port 1194
proto udp
dev tun
ca ca.crt
cert server.crt
key server.key
dh dh.pem
auth SHA256
tls-auth ta.key 0
server 10.8.0.0 255.255.255.0
persist-key
persist-tun
keepalive 10 120
status openvpn-status.log
verb 3
```

---

## 🚀 5. Uruchomienie serwera

```bash
sudo systemctl start openvpn@server
sudo systemctl enable openvpn@server
sudo systemctl status openvpn@server
```

---

## 👤 6. Tworzenie klienta

```bash
./easyrsa gen-req client1 nopass
./easyrsa sign-req client client1
```

Kopiuj pliki:

```bash
cp pki/issued/client1.crt pki/private/client1.key /etc/openvpn/
```

---

## 📦 7. Tworzenie pliku `client1.ovpn`

Zapisz w `/root/client1.ovpn`:

```ini
client
dev tun
proto udp
remote 192.168.0.107 1194
resolv-retry infinite
nobind
persist-key
persist-tun
remote-cert-tls server
auth SHA256
tls-auth ta.key 1
verb 3

<ca>
(PASTE zawartość ca.crt)
</ca>

<cert>
(PASTE zawartość client1.crt)
</cert>

<key>
(PASTE zawartość client1.key)
</key>

<tls-auth>
(PASTE zawartość ta.key)
</tls-auth>
```

---

## 🔄 8. Przeniesienie pliku `client1.ovpn` na klienta

Na serwerze uruchom SSH:

```bash
sudo apt install openssh-server -y
sudo systemctl enable ssh
sudo systemctl start ssh
```

Na kliencie skopiuj plik:

```bash
scp root@192.168.0.107:/root/client1.ovpn ~/
```

---

## 🧪 9. Połączenie z klienta

Na kliencie:

```bash
sudo apt install openvpn -y
sudo openvpn --config ~/client1.ovpn
```

Po połączeniu możesz sprawdzić interfejs tun:

```bash
ip a
```

---

## 🎉 Gotowe!

Masz działający tunel VPN między serwerem a klientem.

---

## 📌 Uwagi

- Można dodać reguły NAT i routingu jeśli potrzebujesz pełnego dostępu do sieci
- Można skorzystać z `ufw` lub `iptables` w razie potrzeby
- Dla bezpieczeństwa użyj haseł (passphrase) lub `tls-crypt` zamiast `tls-auth`

